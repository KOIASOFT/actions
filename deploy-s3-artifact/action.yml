name: 'Deploy S3 artifact'
description: 'Deploy S3 distribution artifact'
inputs:
  config_file_path:
    description: 'The path to the configuration file.'
    required: true
    default: '.infrastructure/config.yaml'
  terragrunt_folder:
    description: 'The folder where Terragrunt is stored.'
    required: true
    default: '.infrastructure/terragrunt'
  app:
    description: 'The app to deploy'
    required: true
  account:
    description: 'The account to deploy in'
    required: true
  environment:
    description: 'The environment to deploy in'
    required: true
  repo_ssh_key:
    description: 'The SSH key for getting modules'
    required: true
  changeset:
    description: 'The version to deploy'
    required: true
  debug:
    description: 'Prints debug trace'
    required: true
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      shell: bash
      run: |
        if [ "$DEBUG" == "true" ]; then
          set -x
          pwd
          find
        fi
        
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ inputs.repo_ssh_key }}"
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.0
        terraform_wrapper: false

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: 0.35.13
    - name: Process
      id: process
      shell: bash
      env:
        CONFIG_PATH: ${{ inputs.config_file_path }}
        TERRAGRUNT_FOLDER: ${{ inputs.terragrunt_folder }}
        APP: ${{ inputs.app }}
        ENVIRONMENT: ${{ inputs.account }}-${{ inputs.environment }}
        CHANGESET: ${{ inputs.changeset }}
        DEBUG: ${{ inputs.debug }}
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        set -e
        
        if [ "$DEBUG" == "true" ]; then
          set -x
          pwd
          find
        fi
        
        source ${{ github.action_path }}/../.scripts/deploy-s3-artifact.sh
